// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: danmu.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Danmu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	VideoId int64  `protobuf:"varint,3,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Content string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	BeginAt int64  `protobuf:"varint,5,opt,name=begin_at,json=beginAt,proto3" json:"begin_at,omitempty"`
}

func (x *Danmu) Reset() {
	*x = Danmu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_danmu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Danmu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Danmu) ProtoMessage() {}

func (x *Danmu) ProtoReflect() protoreflect.Message {
	mi := &file_danmu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Danmu.ProtoReflect.Descriptor instead.
func (*Danmu) Descriptor() ([]byte, []int) {
	return file_danmu_proto_rawDescGZIP(), []int{0}
}

func (x *Danmu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Danmu) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Danmu) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *Danmu) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Danmu) GetBeginAt() int64 {
	if x != nil {
		return x.BeginAt
	}
	return 0
}

type SendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64  `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	UserId  int64  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content" form:"content" binding:"required"`                 // @gotags: json:"content" form:"content" binding:"required"
	BeginAt int64  `protobuf:"varint,4,opt,name=begin_at,json=beginAt,proto3" json:"begin_at" form:"begin_at" binding:"required"` // @gotags: json:"begin_at" form:"begin_at" binding:"required"
}

func (x *SendReq) Reset() {
	*x = SendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_danmu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendReq) ProtoMessage() {}

func (x *SendReq) ProtoReflect() protoreflect.Message {
	mi := &file_danmu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendReq.ProtoReflect.Descriptor instead.
func (*SendReq) Descriptor() ([]byte, []int) {
	return file_danmu_proto_rawDescGZIP(), []int{1}
}

func (x *SendReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

func (x *SendReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SendReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendReq) GetBeginAt() int64 {
	if x != nil {
		return x.BeginAt
	}
	return 0
}

type SendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Danmu *Danmu `protobuf:"bytes,1,opt,name=danmu,proto3" json:"danmu,omitempty"`
}

func (x *SendResp) Reset() {
	*x = SendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_danmu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResp) ProtoMessage() {}

func (x *SendResp) ProtoReflect() protoreflect.Message {
	mi := &file_danmu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResp.ProtoReflect.Descriptor instead.
func (*SendResp) Descriptor() ([]byte, []int) {
	return file_danmu_proto_rawDescGZIP(), []int{2}
}

func (x *SendResp) GetDanmu() *Danmu {
	if x != nil {
		return x.Danmu
	}
	return nil
}

type GetDanmusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId int64 `protobuf:"varint,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *GetDanmusReq) Reset() {
	*x = GetDanmusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_danmu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDanmusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDanmusReq) ProtoMessage() {}

func (x *GetDanmusReq) ProtoReflect() protoreflect.Message {
	mi := &file_danmu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDanmusReq.ProtoReflect.Descriptor instead.
func (*GetDanmusReq) Descriptor() ([]byte, []int) {
	return file_danmu_proto_rawDescGZIP(), []int{3}
}

func (x *GetDanmusReq) GetVideoId() int64 {
	if x != nil {
		return x.VideoId
	}
	return 0
}

type GetDanmusResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Danmus []*Danmu `protobuf:"bytes,1,rep,name=danmus,proto3" json:"danmus,omitempty"`
}

func (x *GetDanmusResp) Reset() {
	*x = GetDanmusResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_danmu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDanmusResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDanmusResp) ProtoMessage() {}

func (x *GetDanmusResp) ProtoReflect() protoreflect.Message {
	mi := &file_danmu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDanmusResp.ProtoReflect.Descriptor instead.
func (*GetDanmusResp) Descriptor() ([]byte, []int) {
	return file_danmu_proto_rawDescGZIP(), []int{4}
}

func (x *GetDanmusResp) GetDanmus() []*Danmu {
	if x != nil {
		return x.Danmus
	}
	return nil
}

var File_danmu_proto protoreflect.FileDescriptor

var file_danmu_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70,
	0x62, 0x22, 0x80, 0x01, 0x0a, 0x05, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x41, 0x74, 0x22, 0x72, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x41, 0x74, 0x22, 0x2b, 0x0a, 0x08, 0x53, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x52, 0x05,
	0x64, 0x61, 0x6e, 0x6d, 0x75, 0x22, 0x29, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x44, 0x61, 0x6e, 0x6d,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64,
	0x22, 0x32, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x21, 0x0a, 0x06, 0x64, 0x61, 0x6e, 0x6d, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x52, 0x06, 0x64, 0x61,
	0x6e, 0x6d, 0x75, 0x73, 0x32, 0x63, 0x0a, 0x0c, 0x44, 0x61, 0x6e, 0x6d, 0x75, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x0b, 0x2e, 0x70,
	0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0c, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x30, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x6e, 0x6d, 0x75, 0x73, 0x12, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61, 0x6e,
	0x6d, 0x75, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x61, 0x6e, 0x6d, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_danmu_proto_rawDescOnce sync.Once
	file_danmu_proto_rawDescData = file_danmu_proto_rawDesc
)

func file_danmu_proto_rawDescGZIP() []byte {
	file_danmu_proto_rawDescOnce.Do(func() {
		file_danmu_proto_rawDescData = protoimpl.X.CompressGZIP(file_danmu_proto_rawDescData)
	})
	return file_danmu_proto_rawDescData
}

var file_danmu_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_danmu_proto_goTypes = []interface{}{
	(*Danmu)(nil),         // 0: pb.Danmu
	(*SendReq)(nil),       // 1: pb.SendReq
	(*SendResp)(nil),      // 2: pb.SendResp
	(*GetDanmusReq)(nil),  // 3: pb.GetDanmusReq
	(*GetDanmusResp)(nil), // 4: pb.GetDanmusResp
}
var file_danmu_proto_depIdxs = []int32{
	0, // 0: pb.SendResp.danmu:type_name -> pb.Danmu
	0, // 1: pb.GetDanmusResp.danmus:type_name -> pb.Danmu
	1, // 2: pb.DanmuService.Send:input_type -> pb.SendReq
	3, // 3: pb.DanmuService.GetDanmus:input_type -> pb.GetDanmusReq
	2, // 4: pb.DanmuService.Send:output_type -> pb.SendResp
	4, // 5: pb.DanmuService.GetDanmus:output_type -> pb.GetDanmusResp
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_danmu_proto_init() }
func file_danmu_proto_init() {
	if File_danmu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_danmu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Danmu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_danmu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_danmu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_danmu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDanmusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_danmu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDanmusResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_danmu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_danmu_proto_goTypes,
		DependencyIndexes: file_danmu_proto_depIdxs,
		MessageInfos:      file_danmu_proto_msgTypes,
	}.Build()
	File_danmu_proto = out.File
	file_danmu_proto_rawDesc = nil
	file_danmu_proto_goTypes = nil
	file_danmu_proto_depIdxs = nil
}
